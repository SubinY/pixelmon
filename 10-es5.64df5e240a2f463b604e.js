(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{z19X:function(t,e,o){"use strict";o.r(e);var a=o("8Y7J"),l=o("0qEG"),d=function(){this.item={cols:1,urls:{"en-US":"packages/acl/docs/control.en-US.md","zh-CN":"packages/acl/docs/control.zh-CN.md"},content:{"en-US":{content:'<section class="markdown"><h2 id="Foreword">Foreword<a onclick="window.location.hash = \'Foreword\'" class="anchor">#</a></h2><p>Many times you need to control the permissions of a button. <code>@pixelmon/acl</code> provides an <code>acl</code> directive that allows you to control the permissions of a button, table, list, etc.</p><h2 id="Principle">Principle<a onclick="window.location.hash = \'Principle\'" class="anchor">#</a></h2><p><code>[acl]</code> adds a <code>acl__hide</code> style to the target element by default, and hides the unauthorized element with <code>display: none</code>, which is a simple and efficient way.</p><p>The corresponding <code>*aclIf</code> is a structured directive similar to <code>ngIf</code> which does not render the element when it is not authorized. <strong>Note:</strong> In order to keep it simple, it does not support <code>acl-ability</code> permission point configuration.</p><h2 id="DEMO">DEMO<a onclick="window.location.hash = \'DEMO\'" class="anchor">#</a></h2><h3 id="Role">Role<a onclick="window.location.hash = \'Role\'" class="anchor">#</a></h3><p>Displayed when the button must have a user role.</p><pre class="hljs language-html"><code>&lt;button [acl]="\'user\'"&gt;&lt;/button&gt; &lt;button *aclIf="\'user\'"&gt;&lt;/button&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Displayed when the button must have a user or manage role.&lt;/p&gt;&lt;pre class="hljs language-html"&gt;&lt;code&gt;&lt;button [acl]="[\'user\', \'manage\']"&gt;&lt;/button&gt; &lt;button *aclIf="[\'user\', \'manage\']"&gt;&lt;/button&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Displayed when the button must have a user and manage role.&lt;/p&gt;&lt;pre class="hljs language-html"&gt;&lt;code&gt;&lt;button [acl]="{ role: [\'user\', \'manage\'], mode: \'allOf\' }"&gt;&lt;/button&gt; &lt;button *aclIf="{ role: [\'user\', \'manage\'], mode: \'allOf\' }"&gt;&lt;/button&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Displayed when the input muse have a user role, displayed text when it\'s not authorized.&lt;/p&gt;&lt;pre class="hljs language-html"&gt;&lt;code&gt;&lt;input nz-input *aclIf="\'user\'; else unauthorized" /&gt; &lt;ng-template #unauthorized&gt;{{user}}&lt;/ng-template&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Use &lt;code&gt;except&lt;/code&gt; reverse control to displayed when it\'s not authorized.&lt;/p&gt;&lt;pre class="hljs language-html"&gt;&lt;code&gt;&lt;ng-template [aclIf]="role" except&gt;\n  &lt;input nz-input /&gt;\n&lt;/ng-template&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id="Permission"&gt;Permission&lt;a onclick="window.location.hash = \'Permission\'" class="anchor"&gt;#&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Displayed when the button must have a 10 value permisseion.&lt;/p&gt;&lt;pre class="hljs language-html"&gt;&lt;code&gt;&lt;button [acl]="10"&gt;&lt;/button&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In order for the acl instruction to be a role or a permission, so the value of the parameter value is &lt;code&gt;string&lt;/code&gt; which mean the role, &lt;code&gt;number&lt;/code&gt; which mean the permission. Use the &lt;code&gt;acl-ability&lt;/code&gt; parameter if the permission is a string.&lt;/p&gt;&lt;pre class="hljs language-html"&gt;&lt;code&gt;&lt;button acl [acl-ability]="\'USER-EDIT\'"&gt;&lt;/button&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;oneOf&lt;/code&gt; Must be valid against exactly one of the given permission (default).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;allOf&lt;/code&gt; Must be valid against all of the given permission&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Displayed when the button must have a &lt;code&gt;10&lt;/code&gt; and &lt;code&gt;USER-EDIT&lt;/code&gt; permission.&lt;/p&gt;&lt;pre class="hljs language-html"&gt;&lt;code&gt;&lt;button [acl]="{ ability: [10, \'USER-EDIT\'], mode: \'allOf\' }"&gt;&lt;/button&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;String permission&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The check permission is via the &lt;code&gt;can&lt;/code&gt; method, and the &lt;code&gt;PixelmonACLConfig&lt;/code&gt; contains the &lt;code&gt;preCan&lt;/code&gt; method, which can be used to implement a string to distinguish roles or permissions.&lt;/p&gt;&lt;pre class="hljs language-ts"&gt;&lt;code&gt;export function fnPixelmonACLConfig(): PixelmonACLConfig {\n  return {\n    ...new PixelmonACLConfig(),\n    ...({\n      preCan: (roleOrAbility: ACLCanType) =&gt; {\n        const str = roleOrAbility.toString();\n        return str.startsWith(\'ability.\') ? { ability: [str] } : null;\n      },\n    } as PixelmonACLConfig),\n  };\n}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Therefore, passing a string with the beginning of &lt;code&gt;ability.&lt;/code&gt; will be considered a permission point, for example:&lt;/p&gt;&lt;pre class="hljs language-html"&gt;&lt;code&gt;&lt;button acl="ability.user.edit"&gt;&lt;/button&gt;</code></pre></section>',api:'<h2 id="API">API<a onclick="window.location.hash = \'API\'" class="anchor">#</a></h2><h3 id="*aclIf">*aclIf<a onclick="window.location.hash = \'*aclIf\'" class="anchor">#</a></h3><table><thead><tr><th>Property</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td><code>[aclIf]</code></td><td><code>can</code> method parameter</td><td><code>ACLCanType</code></td><td>-</td></tr><tr><td><code>[aclIfThen]</code></td><td>Display template when authorized</td><td><code>TemplateRef&lt;void> | null</code></td><td>-</td></tr><tr><td><code>[aclIfElse]</code></td><td>Display template when not authorized</td><td><code>TemplateRef&lt;void> | null</code></td><td>-</td></tr><tr><td><code>[except]</code></td><td>Permissions denied to display</td><td><code>boolean</code></td><td><code>false</code></td></tr></tbody></table>',meta:{order:3,title:"Granular permissions",type:"Documents"},toc:[{id:"Foreword",title:"Foreword",h:2},{id:"Principle",title:"Principle",h:2},{id:"DEMO",title:"DEMO",h:2},{id:"Role",title:"Role",h:3},{id:"Permission",title:"Permission",h:3},{id:"API",title:"API",h:2},{id:"*aclIf",title:"*aclIf",h:3}]},"zh-CN":{content:'<section class="markdown"><h2 id="\u5199\u5728\u524d\u9762">\u5199\u5728\u524d\u9762<a onclick="window.location.hash = \'\u5199\u5728\u524d\u9762\'" class="anchor">#</a></h2><p>\u5f88\u591a\u65f6\u5019\u9700\u8981\u5bf9\u67d0\u4e2a\u6309\u94ae\u8fdb\u884c\u6743\u9650\u63a7\u5236\uff0c<code>@pixelmon/acl</code> \u63d0\u4f9b\u4e00\u4e2a <code>acl</code> \u6307\u4ee4\uff0c\u53ef\u4ee5\u5229\u7528\u89d2\u8272\u6216\u6743\u9650\u70b9\u5bf9\u67d0\u4e2a\u6309\u94ae\u3001\u8868\u683c\u3001\u5217\u8868\u7b49\u5143\u7d20\u8fdb\u884c\u6743\u9650\u63a7\u5236\u3002</p><h2 id="\u539f\u7406">\u539f\u7406<a onclick="window.location.hash = \'\u539f\u7406\'" class="anchor">#</a></h2><p><code>[acl]</code> \u9ed8\u8ba4\u4f1a\u5728\u76ee\u6807\u5143\u7d20\u4e0a\u589e\u52a0\u4e00\u4e2a <code>acl__hide</code> \u6837\u5f0f\uff0c\u5229\u7528 <code>display: none</code> \u6765\u9690\u85cf\u672a\u6388\u6743\u5143\u7d20\uff0c\u5b83\u662f\u4e00\u4e2a\u7b80\u5355\u3001\u53c8\u9ad8\u6548\u7684\u65b9\u5f0f\u3002</p><p>\u4ee5\u6b64\u76f8\u5bf9\u5e94\u7684 <code>*aclIf</code> \u662f\u4e00\u4e2a\u7ed3\u6784\u578b\u6307\u4ee4\uff0c\u5b83\u7c7b\u4f3c <code>ngIf</code> \u5728\u672a\u6388\u6743\u65f6\u4f1a\u4e0d\u6e32\u67d3\u8be5\u5143\u7d20\u3002<strong>\u6ce8\uff1a</strong> \u4e3a\u4e86\u4fdd\u6301\u7b80\u6d01\u5b83\u5e76\u4e0d\u652f\u6301 <code>acl-ability</code> \u6743\u9650\u70b9\u914d\u7f6e\u3002</p><h2 id="\u793a\u4f8b">\u793a\u4f8b<a onclick="window.location.hash = \'\u793a\u4f8b\'" class="anchor">#</a></h2><h3 id="\u89d2\u8272">\u89d2\u8272<a onclick="window.location.hash = \'\u89d2\u8272\'" class="anchor">#</a></h3><p>\u6309\u94ae\u5fc5\u987b\u62e5\u6709 user \u89d2\u8272\u663e\u793a\u3002</p><pre class="hljs language-html"><code>&lt;button [acl]="\'user\'"&gt;&lt;/button&gt; &lt;button *aclIf="\'user\'"&gt;&lt;/button&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;\u6309\u94ae\u5fc5\u987b\u62e5\u6709 user \u6216 manage \u89d2\u8272\u663e\u793a\u3002&lt;/p&gt;&lt;pre class="hljs language-html"&gt;&lt;code&gt;&lt;button [acl]="[\'user\', \'manage\']"&gt;&lt;/button&gt; &lt;button *aclIf="[\'user\', \'manage\']"&gt;&lt;/button&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;\u6309\u94ae\u5fc5\u987b\u62e5\u6709 user \u548c manage \u89d2\u8272\u663e\u793a\u3002&lt;/p&gt;&lt;pre class="hljs language-html"&gt;&lt;code&gt;&lt;button [acl]="{ role: [\'user\', \'manage\'], mode: \'allOf\' }"&gt;&lt;/button&gt; &lt;button *aclIf="{ role: [\'user\', \'manage\'], mode: \'allOf\' }"&gt;&lt;/button&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;\u5f53\u62e5\u6709 user \u89d2\u8272\u663e\u793a\u6587\u672c\u6846\uff0c\u672a\u6388\u6743\u663e\u793a\u6587\u672c\u3002&lt;/p&gt;&lt;pre class="hljs language-html"&gt;&lt;code&gt;&lt;input nz-input *aclIf="\'user\'; else unauthorized" /&gt; &lt;ng-template #unauthorized&gt;{{user}}&lt;/ng-template&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;\u4f7f\u7528 &lt;code&gt;except&lt;/code&gt; \u53cd\u5411\u63a7\u5236\uff0c\u5f53\u672a\u62e5\u6709 user \u89d2\u8272\u65f6\u663e\u793a\u3002&lt;/p&gt;&lt;pre class="hljs language-html"&gt;&lt;code&gt;&lt;ng-template [aclIf]="role" except&gt;\n  &lt;input nz-input /&gt;\n&lt;/ng-template&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id="\u6743\u9650\u70b9"&gt;\u6743\u9650\u70b9&lt;a onclick="window.location.hash = \'\u6743\u9650\u70b9\'" class="anchor"&gt;#&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;\u6309\u94ae\u5fc5\u987b\u62e5\u6709 10 \u6743\u9650\u70b9\u663e\u793a\u3002&lt;/p&gt;&lt;pre class="hljs language-html"&gt;&lt;code&gt;&lt;button [acl]="10"&gt;&lt;/button&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;acl \u6307\u4ee4\u4e3a\u4e86\u80fd\u6240\u4f20\u9012\u7684\u503c\u662f\u89d2\u8272\u8fd8\u662f\u6743\u9650\u70b9\uff0c\u6240\u4ee5\u4ee5 &lt;code&gt;string&lt;/code&gt; \u7c7b\u578b\u8868\u793a\u89d2\u8272\u3001&lt;code&gt;number&lt;/code&gt; \u7c7b\u578b\u8868\u793a\u6743\u9650\u70b9\uff0c\u82e5\u6743\u9650\u70b9\u4e3a\u5b57\u7b26\u4e32\uff0c\u53ef\u4f7f\u7528\u4ee5\u4e0b\u5199\u6cd5\u3002&lt;/p&gt;&lt;pre class="hljs language-html"&gt;&lt;code&gt;&lt;button acl [acl-ability]="\'USER-EDIT\'"&gt;&lt;/button&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;\u4f7f\u7528 &lt;code&gt;mode: \'allOf\'&lt;/code&gt; \u8868\u793a\u5fc5\u987b\u540c\u65f6\u62e5\u6709\u3002&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;oneOf&lt;/code&gt; \u8868\u793a\u53ea\u987b\u6ee1\u8db3\u89d2\u8272\u6216\u6743\u9650\u70b9\u6570\u7ec4\u4e2d\u7684\u4e00\u9879\u7b97\u6709\u6548\uff08\u9ed8\u8ba4\uff09&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;allOf&lt;/code&gt; \u8868\u793a\u5fc5\u987b\u6ee1\u8db3\u6240\u6709\u89d2\u8272\u6216\u6743\u9650\u70b9\u6570\u7ec4\u7b97\u6709\u6548&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;\u6309\u94ae\u5fc5\u987b\u62e5\u6709 &lt;code&gt;10&lt;/code&gt; \u548c &lt;code&gt;USER-EDIT&lt;/code&gt; \u6743\u9650\u70b9\u65f6\u663e\u793a\u3002&lt;/p&gt;&lt;pre class="hljs language-html"&gt;&lt;code&gt;&lt;button [acl]="{ ability: [10, \'USER-EDIT\'], mode: \'allOf\' }"&gt;&lt;/button&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;\u5b57\u7b26\u4e32\u578b\u6743\u9650\u70b9&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;\u68c0\u67e5\u6743\u9650\u662f\u901a\u8fc7 &lt;code&gt;can&lt;/code&gt; \u65b9\u6cd5\uff0c&lt;code&gt;PixelmonACLConfig&lt;/code&gt; \u5305\u542b &lt;code&gt;preCan&lt;/code&gt; \u65b9\u6cd5\uff0c\u53ef\u4ee5\u5229\u7528\u8be5\u65b9\u6cd5\u6765\u5b9e\u73b0\u4e00\u4e2a\u5b57\u7b26\u4e32\u533a\u5206\u89d2\u8272\u6216\u6743\u9650\u70b9\u3002&lt;/p&gt;&lt;pre class="hljs language-ts"&gt;&lt;code&gt;export function fnPixelmonACLConfig(): PixelmonACLConfig {\n  return {\n    ...new PixelmonACLConfig(),\n    ...({\n      preCan: (roleOrAbility: ACLCanType) =&gt; {\n        const str = roleOrAbility.toString();\n        return str.startsWith(\'ability.\') ? { ability: [str] } : null;\n      },\n    } as PixelmonACLConfig),\n  };\n}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;\u56e0\u6b64\uff0c\u5f53\u4f20\u9012\u4e00\u4e2a\u5e26\u6709 &lt;code&gt;ability.&lt;/code&gt; \u5f00\u5934\u7684\u5b57\u7b26\u4e32\u4f1a\u88ab\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u6743\u9650\u70b9\uff0c\u4f8b\u5982\uff1a&lt;/p&gt;&lt;pre class="hljs language-html"&gt;&lt;code&gt;&lt;button acl="ability.user.edit"&gt;&lt;/button&gt;</code></pre></section>',api:'<h2 id="API">API<a onclick="window.location.hash = \'API\'" class="anchor">#</a></h2><h3 id="*aclIf">*aclIf<a onclick="window.location.hash = \'*aclIf\'" class="anchor">#</a></h3><table><thead><tr><th>\u53c2\u6570</th><th>\u8bf4\u660e</th><th>\u7c7b\u578b</th><th>\u9ed8\u8ba4\u503c</th></tr></thead><tbody><tr><td><code>[aclIf]</code></td><td><code>can</code> \u65b9\u6cd5\u53c2\u6570\u4f53</td><td><code>ACLCanType</code></td><td>-</td></tr><tr><td><code>[aclIfThen]</code></td><td>\u5df2\u6388\u6743\u65f6\u663e\u793a\u6a21\u677f</td><td><code>TemplateRef&lt;void> | null</code></td><td>-</td></tr><tr><td><code>[aclIfElse]</code></td><td>\u672a\u6388\u6743\u65f6\u663e\u793a\u6a21\u677f</td><td><code>TemplateRef&lt;void> | null</code></td><td>-</td></tr><tr><td><code>[except]</code></td><td>\u672a\u6388\u6743\u65f6\u663e\u793a</td><td><code>boolean</code></td><td><code>false</code></td></tr></tbody></table>',meta:{order:3,title:"\u7c92\u5ea6\u63a7\u5236",type:"Documents"},toc:[{id:"\u5199\u5728\u524d\u9762",title:"\u5199\u5728\u524d\u9762",h:2},{id:"\u539f\u7406",title:"\u539f\u7406",h:2},{id:"\u793a\u4f8b",title:"\u793a\u4f8b",h:2},{id:"\u89d2\u8272",title:"\u89d2\u8272",h:3},{id:"\u6743\u9650\u70b9",title:"\u6743\u9650\u70b9",h:3},{id:"API",title:"API",h:2},{id:"*aclIf",title:"*aclIf",h:3}]}},demo:!1},this.codes=[]},n=function(){this.item={cols:1,urls:{"en-US":"packages/acl/docs/getting-started.en-US.md","zh-CN":"packages/acl/docs/getting-started.zh-CN.md"},content:{"en-US":{content:'<section class="markdown"><p>ACL (Access Control List) is a very simple role-based permission control method, you can use in any Angular projects, a online <a target="_blank" href="//1ziton.github.io/1ziton/#/logics/acl" data-url="//1ziton.github.io/1ziton/#/logics/acl">DEMO</a></p><h2 id="About-ACLService">About ACLService<a onclick="window.location.hash = \'About-ACLService\'" class="anchor">#</a></h2><p>The <code>ACLService</code> service class contains a set of methods based on role permissions. For a better coding experience 1ziton has multiple components or modules that depend on it, such as <code>st</code>, <code>MenuService</code> etc.. So, when you encounter the <code>acl</code> attribute, it means the parameter value of the <a href="#ACLCanType" data-url="#ACLCanType">can</a> method.</p><h2 id="Usage">Usage<a onclick="window.location.hash = \'Usage\'" class="anchor">#</a></h2><p>Install <code>@pixelmon/acl</code>:</p><pre class="hljs language-bash"><code>yarn add @pixelmon/acl</code></pre><p>Import <code>PixelmonACLModule</code> module:</p><pre class="hljs language-typescript"><code>import { PixelmonACLModule } from \'@pixelmon/acl\';\n\n@NgModule({\n  imports: [PixelmonACLModule.forRoot()],\n})\nexport class AppModule {}</code></pre></section>',api:'<h2 id="API">API<a onclick="window.location.hash = \'API\'" class="anchor">#</a></h2><h3 id="PixelmonACLConfig">PixelmonACLConfig<a onclick="window.location.hash = \'PixelmonACLConfig\'" class="anchor">#</a></h3><table><thead><tr><th>Name</th><th>Type</th><th>Summary</th><th>Default</th></tr></thead><tbody><tr><td><code>[guard_url]</code></td><td><code>string</code></td><td>Router URL when guard fail</td><td><code>/403</code></td></tr><tr><td><code>[preCan]</code></td><td><code>(roleOrAbility: <a data-toc="ACLCanType">ACLCanType</a>) => <a data-toc="ACLType">ACLType</a></code></td><td><code>can</code> before execution callback</td><td>-</td></tr></tbody></table><h3 id="ACLService">ACLService<a onclick="window.location.hash = \'ACLService\'" class="anchor">#</a></h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>[change]</code></td><td>Listen for ACL change notifications</td></tr><tr><td><code>[data]</code></td><td>Get all ACL data</td></tr><tr><td><code>setFull(val: boolean)</code></td><td>Whether to super administrator</td></tr><tr><td><code>set(value: <a data-toc="ACLType">ACLType</a>)</code></td><td>Set current user role or permission (automatic override)</td></tr><tr><td><code>setRole(roles: string[])</code></td><td>Set current user role (automatic override)</td></tr><tr><td><code>setAbility(abilities: (number | string)[])</code></td><td>Set current user permission (automatic override)</td></tr><tr><td><code>add(value: <a data-toc="ACLType">ACLType</a>)</code></td><td>Add role or permission to the current user</td></tr><tr><td><code>attachRole(roles: string[])</code></td><td>Attach a role to the current user</td></tr><tr><td><code>attachAbility(abilities: (number | string)[])</code></td><td>Attach a permission to the current user</td></tr><tr><td><code>removeRole(roles: string[])</code></td><td>Remove the role for the current user</td></tr><tr><td><code>removeAbility(abilities: (number | string)[])</code></td><td>Remove the permission for the current user</td></tr><tr><td><code>can(roleOrAbility: <a data-toc="ACLCanType">ACLCanType</a>)</code></td><td>Whether the current user has a role</td></tr><tr><td><code>canAbility(ability: <a data-toc="ACLCanType">ACLCanType</a>)</code></td><td>Whether the current user has a permission</td></tr></tbody></table><h3 id="ACLCanType">ACLCanType<a onclick="window.location.hash = \'ACLCanType\'" class="anchor">#</a></h3><pre class="hljs language-ts"><code>type ACLCanType = number | number[] | string | string[] | ACLType;</code></pre><h3 id="ACLType">ACLType<a onclick="window.location.hash = \'ACLType\'" class="anchor">#</a></h3><table><thead><tr><th>Name</th><th>Type</th><th>Summary</th><th>Default</th></tr></thead><tbody><tr><td><code>[role]</code></td><td><code>string[]</code></td><td>List of role</td><td>-</td></tr><tr><td><code>[ability]</code></td><td><code>number[], string[]</code></td><td>List of permission</td><td>-</td></tr><tr><td><code>[mode]</code></td><td><code>allOf, oneOf</code></td><td><code>allOf</code> Must be valid against all of the given permission.<br><code>oneOf</code> Must be valid against exactly one of the given permission.</td><td><code>oneOf</code></td></tr><tr><td><code>[except]</code></td><td><code>boolean</code></td><td>Whether it\'s except, when the result is <code>true</code>, it means unauthorized</td><td><code>false</code></td></tr></tbody></table>',meta:{order:1,title:"Getting Started",type:"Documents",module:"PixelmonACLModule",config:"PixelmonACLConfig"},toc:[{id:"About-ACLService",title:"About ACLService",h:2},{id:"Usage",title:"Usage",h:2},{id:"API",title:"API",h:2},{id:"PixelmonACLConfig",title:"PixelmonACLConfig",h:3},{id:"ACLService",title:"ACLService",h:3},{id:"ACLCanType",title:"ACLCanType",h:3},{id:"ACLType",title:"ACLType",h:3}]},"zh-CN":{content:'<section class="markdown"><p>ACL \u5168\u79f0\u53eb\u8bbf\u95ee\u63a7\u5236\u5217\u8868\uff08Access Control List\uff09\uff0c\u662f\u4e00\u79cd\u975e\u5e38\u7b80\u5355\u7684\u57fa\u4e8e\u89d2\u8272\u6743\u9650\u63a7\u5236\u65b9\u5f0f\u3002\u4e00\u4e2a\u5b8c\u5168\u72ec\u7acb <code>@pixelmon/acl</code> \u6a21\u5757\uff08<a target="_blank" href="//1ziton.github.io/1ziton/#/logics/acl" data-url="//1ziton.github.io/1ziton/#/logics/acl">DEMO</a>\uff09\u3002</p><h2 id="\u5982\u4f55\u8fd0\u884c">\u5982\u4f55\u8fd0\u884c<a onclick="window.location.hash = \'\u5982\u4f55\u8fd0\u884c\'" class="anchor">#</a></h2><p>\u5185\u90e8\u5b9e\u9645\u662f\u4e00\u4e2a <code>ACLService</code> \u5b83\u63d0\u4f9b\u4e00\u5957\u57fa\u4e8e\u89d2\u8272\u6743\u9650\u670d\u52a1\u7c7b\u3002\u4e3a\u4e86\u66f4\u597d\u7684\u7f16\u7801\u4f53\u9a8c Pixelmon \u6709\u591a\u5904\u7ec4\u4ef6\u6216\u6a21\u5757\u4e5f\u4f9d\u8d56\u4e8e\u5b83\uff0c\u4f8b\u5982\uff1a<code>st</code>\u3001<code>MenuService</code> \u7b49\uff0c\u5e76\u4e14\u8fd9\u4e9b\u4f1a\u4ee5 <code>acl</code> \u5c5e\u6027\u7684\u5f62\u5f0f\u8868\u73b0\u3002\u56e0\u6b64\uff0c\u5f53\u9047\u5230 <code>acl</code> \u5c5e\u6027\u90fd\u8868\u793a <a href="#ACLCanType" data-url="#ACLCanType">can</a> \u65b9\u6cd5\u7684<strong>\u53c2\u6570\u503c</strong>\u3002</p><h2 id="\u5982\u4f55\u4f7f\u7528">\u5982\u4f55\u4f7f\u7528<a onclick="window.location.hash = \'\u5982\u4f55\u4f7f\u7528\'" class="anchor">#</a></h2><p>\u5b89\u88c5 <code>@pixelmon/acl</code> \u4f9d\u8d56\u5305\uff1a</p><pre class="hljs language-bash"><code>yarn add @pixelmon/acl</code></pre><p>\u6216</p><pre class="hljs language-bash"><code>npm i @pixelmon/acl</code></pre><p>\u5bfc\u5165 <code>PixelmonACLModule</code> \u6a21\u5757\uff1a</p><pre class="hljs language-typescript"><code>import { PixelmonACLModule } from \'@pixelmon/acl\';\n\n@NgModule({\n  imports: [PixelmonACLModule.forRoot()],\n})\nexport class AppModule {}</code></pre></section>',api:'<h2 id="API">API<a onclick="window.location.hash = \'API\'" class="anchor">#</a></h2><h3 id="PixelmonACLConfig">PixelmonACLConfig<a onclick="window.location.hash = \'PixelmonACLConfig\'" class="anchor">#</a></h3><table><thead><tr><th>\u5c5e\u6027</th><th>\u7c7b\u578b</th><th>\u8bf4\u660e</th><th>\u9ed8\u8ba4</th></tr></thead><tbody><tr><td><code>[guard_url]</code></td><td><code>string</code></td><td>\u8def\u7531\u5b88\u536b\u5931\u8d25\u540e\u8df3\u8f6c</td><td><code>/403</code></td></tr><tr><td><code>[preCan]</code></td><td><code>(roleOrAbility: <a data-toc="ACLCanType">ACLCanType</a>) => <a data-toc="ACLType">ACLType</a></code></td><td><code>can</code> \u6267\u884c\u524d\u56de\u8c03</td><td>-</td></tr></tbody></table><h3 id="ACLService">ACLService<a onclick="window.location.hash = \'ACLService\'" class="anchor">#</a></h3><p>ACLService \u63d0\u4f9b\u4e00\u4e2a\u5b8c\u6574\u7684\u57fa\u4e8e\u89d2\u8272\u7684\u8bbf\u95ee\u63a7\u5236\u7684\u670d\u52a1\uff0c\u82e5\u9700\u8981\u652f\u6301\u8def\u7531\u5b88\u536b\uff0c\u8bf7\u914d\u5408 ACLService \u4e0e Route Guard \u914d\u5408\u7b80\u4fbf\u5b9e\u73b0\u3002</p><table><thead><tr><th>\u65b9\u6cd5</th><th>\u8bf4\u660e</th></tr></thead><tbody><tr><td><code>[change]</code></td><td>\u76d1\u542c ACL \u53d8\u66f4\u901a\u77e5</td></tr><tr><td><code>[data]</code></td><td>\u83b7\u53d6\u6240\u6709 ACL \u6570\u636e</td></tr><tr><td><code>setFull(val: boolean)</code></td><td>\u6807\u8bc6\u5f53\u524d\u7528\u6237\u4e3a\u5168\u91cf\uff0c\u5373\u4e0d\u53d7\u9650</td></tr><tr><td><code>set(value: <a data-toc="ACLType">ACLType</a>)</code></td><td>\u8bbe\u7f6e\u5f53\u524d\u7528\u6237\u89d2\u8272\u6216\u6743\u9650\u80fd\u529b\uff08\u4f1a\u5148\u6e05\u9664\u6240\u6709\uff09</td></tr><tr><td><code>setRole(roles: string[])</code></td><td>\u8bbe\u7f6e\u5f53\u524d\u7528\u6237\u89d2\u8272\uff08\u4f1a\u5148\u6e05\u9664\u6240\u6709\uff09</td></tr><tr><td><code>setAbility(abilities: (number | string)[])</code></td><td>\u8bbe\u7f6e\u5f53\u524d\u7528\u6237\u6743\u9650\u80fd\u529b\uff08\u4f1a\u5148\u6e05\u9664\u6240\u6709\uff09</td></tr><tr><td><code>add(value: <a data-toc="ACLType">ACLType</a>)</code></td><td>\u4e3a\u5f53\u524d\u7528\u6237\u589e\u52a0\u89d2\u8272\u6216\u6743\u9650\u80fd\u529b</td></tr><tr><td><code>attachRole(roles: string[])</code></td><td>\u4e3a\u5f53\u524d\u7528\u6237\u9644\u52a0\u89d2\u8272</td></tr><tr><td><code>attachAbility(abilities: (number | string)[])</code></td><td>\u4e3a\u5f53\u524d\u7528\u6237\u9644\u52a0\u6743\u9650</td></tr><tr><td><code>removeRole(roles: string[])</code></td><td>\u4e3a\u5f53\u524d\u7528\u6237\u79fb\u9664\u89d2\u8272</td></tr><tr><td><code>removeAbility(abilities: (number | string)[])</code></td><td>\u4e3a\u5f53\u524d\u7528\u6237\u79fb\u9664\u6743\u9650</td></tr><tr><td><code>can(roleOrAbility: <a data-toc="ACLCanType">ACLCanType</a>)</code></td><td>\u5f53\u524d\u7528\u6237\u662f\u5426\u6709\u5bf9\u5e94\u89d2\u8272</td></tr><tr><td><code>canAbility(ability: <a data-toc="ACLCanType">ACLCanType</a>)</code></td><td>\u5f53\u524d\u7528\u6237\u662f\u5426\u6709\u5bf9\u5e94\u6743\u9650\u70b9</td></tr></tbody></table><h3 id="ACLCanType">ACLCanType<a onclick="window.location.hash = \'ACLCanType\'" class="anchor">#</a></h3><pre class="hljs language-ts"><code>type ACLCanType = number | number[] | string | string[] | ACLType;</code></pre><h3 id="ACLType">ACLType<a onclick="window.location.hash = \'ACLType\'" class="anchor">#</a></h3><table><thead><tr><th>\u5c5e\u6027</th><th>\u7c7b\u578b</th><th>\u8bf4\u660e</th><th>\u9ed8\u8ba4</th></tr></thead><tbody><tr><td><code>[role]</code></td><td><code>string[]</code></td><td>\u89d2\u8272</td><td>-</td></tr><tr><td><code>[ability]</code></td><td><code>number[], string[]</code></td><td>\u6743\u9650\u70b9</td><td>-</td></tr><tr><td><code>[mode]</code></td><td><code>allOf, oneOf</code></td><td><code>allOf</code> \u8868\u793a\u5fc5\u987b\u6ee1\u8db3\u6240\u6709\u89d2\u8272\u6216\u6743\u9650\u70b9\u6570\u7ec4\u7b97\u6709\u6548<br><code>oneOf</code> \u8868\u793a\u53ea\u987b\u6ee1\u8db3\u89d2\u8272\u6216\u6743\u9650\u70b9\u6570\u7ec4\u4e2d\u7684\u4e00\u9879\u7b97\u6709\u6548</td><td><code>oneOf</code></td></tr><tr><td><code>[except]</code></td><td><code>boolean</code></td><td>\u662f\u5426\u53d6\u53cd\uff0c\u5373\u7ed3\u679c\u4e3a <code>true</code> \u65f6\u8868\u793a\u672a\u6388\u6743</td><td><code>false</code></td></tr></tbody></table>',meta:{order:1,title:"\u5f00\u59cb\u4f7f\u7528",type:"Documents",module:"PixelmonACLModule",config:"PixelmonACLConfig"},toc:[{id:"\u5982\u4f55\u8fd0\u884c",title:"\u5982\u4f55\u8fd0\u884c",h:2},{id:"\u5982\u4f55\u4f7f\u7528",title:"\u5982\u4f55\u4f7f\u7528",h:2},{id:"API",title:"API",h:2},{id:"PixelmonACLConfig",title:"PixelmonACLConfig",h:3},{id:"ACLService",title:"ACLService",h:3},{id:"ACLCanType",title:"ACLCanType",h:3},{id:"ACLType",title:"ACLType",h:3}]}},demo:!1},this.codes=[]},c=function(){this.item={cols:1,urls:{"en-US":"packages/acl/docs/guard.en-US.md","zh-CN":"packages/acl/docs/guard.zh-CN.md"},content:{"en-US":{content:"<section class=\"markdown\"><article><h2 id=\"Foreword\">Foreword<a onclick=\"window.location.hash = 'Foreword'\" class=\"anchor\">#</a></h2><p>Routing guard prevent unauthorized users visit the page.</p><p><code>@pixelmon/acl</code> implements the generic guard class <code>ACLGuard</code>, which allows for complex operations through simple configuration in route registration, and supports the <code>Observable</code> type.</p><p>Use the fixed attribute <code>guard</code> to specify the <code>ACLCanType</code> parameter value, for example:</p><pre class=\"hljs language-ts\"><code>const routes: Routes = [\n  {\n    path: 'auth',\n    canActivate: [ACLGuard],\n    data: { guard: 'user1' },\n  },\n  {\n    path: 'auth',\n    canActivate: [ACLGuard],\n    data: {\n      guard: <ACLType>{\n        role: ['user1'],\n        ability: [10, 'USER-EDIT'],\n        mode: 'allOf',\n      },\n    },\n  },\n];</code></pre><blockquote><p>The value of <code>guard</code> must match the value of <a href=\"/acl/api#ACLCanType\" data-url=\"/acl/api#ACLCanType\">ACLCanType</a>.</p></blockquote><h2 id=\"DEMO\">DEMO<a onclick=\"window.location.hash = 'DEMO'\" class=\"anchor\">#</a></h2><pre class=\"hljs language-ts\"><code>import { of } from 'rxjs';\nimport { ACLGuard } from '@pixelmon/acl';\nconst routes: Routes = [\n  {\n    path: 'guard',\n    component: GuardComponent,\n    children: [\n      { path: 'auth', component: GuardAuthComponent, canActivate: [ACLGuard], data: { guard: 'user1' } },\n      { path: 'admin', component: GuardAdminComponent, canActivate: [ACLGuard], data: { guard: 'admin' } },\n    ],\n    canActivateChild: [ACLGuard],\n    data: { guard: <ACLType>{ role: ['user1'], ability: [10, 'USER-EDIT'], mode: 'allOf' } },\n  },\n  { path: 'pro', loadChildren: './pro/pro.module#ProModule', canLoad: [ACLGuard], data: { guard: 1 } },\n  { path: 'pro', loadChildren: './pro/pro.module#ProModule', canLoad: [ACLGuard], data: { guard: of(false).pipe(map(v => 'admin')) } },\n];</code></pre></article></section>",meta:{order:3,title:"Guard",type:"Documents"},toc:[{id:"Foreword",title:"Foreword",h:2},{id:"DEMO",title:"DEMO",h:2}]},"zh-CN":{content:"<section class=\"markdown\"><article><h2 id=\"\u5199\u5728\u524d\u9762\">\u5199\u5728\u524d\u9762<a onclick=\"window.location.hash = '\u5199\u5728\u524d\u9762'\" class=\"anchor\">#</a></h2><p>\u8def\u7531\u5b88\u536b\u53ef\u4ee5\u9632\u6b62\u672a\u6388\u6743\u7528\u6237\u8bbf\u95ee\u9875\u9762\u3002</p><p>\u8def\u7531\u5b88\u536b\u9700\u8981\u5355\u72ec\u5bf9\u6bcf\u4e00\u4e2a\u8def\u7531\u8fdb\u884c\u8bbe\u7f6e\uff0c\u5f88\u591a\u65f6\u5019\u8fd9\u770b\u8d77\u6765\u5f88\u7e41\u7410\uff0c<code>@pixelmon/acl</code> \u5b9e\u73b0\u4e86\u901a\u7528\u5b88\u536b\u7c7b <code>ACLGuard</code>\uff0c\u53ef\u4ee5\u5728\u8def\u7531\u6ce8\u518c\u65f6\u900f\u8fc7\u7b80\u5355\u7684\u914d\u7f6e\u5b8c\u6210\u4e00\u4e9b\u590d\u6742\u7684\u64cd\u4f5c\uff0c\u751a\u81f3\u652f\u6301 <code>Observable</code> \u7c7b\u578b\u3002</p><p>\u4f7f\u7528\u56fa\u5b9a\u5c5e\u6027 <code>guard</code> \u6765\u6307\u5b9a <code>ACLCanType</code> \u53c2\u6570\uff0c\u4f8b\u5982\uff1a</p><pre class=\"hljs language-ts\"><code>const routes: Routes = [\n  {\n    path: 'auth',\n    canActivate: [ACLGuard],\n    data: { guard: 'user1' },\n  },\n  {\n    path: 'auth',\n    canActivate: [ACLGuard],\n    data: {\n      guard: <ACLType>{\n        role: ['user1'],\n        ability: [10, 'USER-EDIT'],\n        mode: 'allOf',\n      },\n    },\n  },\n];</code></pre><blockquote><p><code>guard</code> \u7684\u503c\u5fc5\u987b\u7b26\u5408 <a href=\"/acl/getting-started#ACLCanType\" data-url=\"/acl/getting-started#ACLCanType\">ACLCanType</a> \u7c7b\u578b\u503c\u3002</p></blockquote><h2 id=\"\u793a\u4f8b\">\u793a\u4f8b<a onclick=\"window.location.hash = '\u793a\u4f8b'\" class=\"anchor\">#</a></h2><pre class=\"hljs language-ts\"><code>import { of } from 'rxjs';\nimport { ACLGuard } from '@pixelmon/acl';\nconst routes: Routes = [\n  {\n    path: 'guard',\n    component: GuardComponent,\n    children: [\n      // \u89d2\u8272\u9650\u5b9a\n      { path: 'auth', component: GuardAuthComponent, canActivate: [ACLGuard], data: { guard: 'user1' } },\n      { path: 'admin', component: GuardAdminComponent, canActivate: [ACLGuard], data: { guard: 'admin' } },\n    ],\n    // \u6240\u6709\u5b50\u8def\u7531\u6709\u6548\n    canActivateChild: [ACLGuard],\n    data: { guard: <ACLType>{ role: ['user1'], ability: [10, 'USER-EDIT'], mode: 'allOf' } },\n  },\n  // \u6743\u9650\u70b9\u9650\u5b9a\n  { path: 'pro', loadChildren: './pro/pro.module#ProModule', canLoad: [ACLGuard], data: { guard: 1 } },\n  // \u6216\u4f7f\u7528Observable\u5b9e\u73b0\u66f4\u590d\u6742\u7684\u884c\u4e3a\n  { path: 'pro', loadChildren: './pro/pro.module#ProModule', canLoad: [ACLGuard], data: { guard: of(false).pipe(map(v => 'admin')) } },\n];</code></pre></article></section>",meta:{order:3,title:"\u8def\u7531\u5b88\u536b",type:"Documents"},toc:[{id:"\u5199\u5728\u524d\u9762",title:"\u5199\u5728\u524d\u9762",h:2},{id:"\u793a\u4f8b",title:"\u793a\u4f8b",h:2}]}},demo:!1},this.codes=[]},i=function(){},r=o("pMnS"),s=o("EdU/"),h=o("/Yna"),g=o("JRKe"),p=o("Ed4d"),u=o("8WaK"),b=o("QfCi"),m=o("CghO"),C=o("Sq/J"),A=o("mHlG"),f=o("9BMt"),y=o("kRch"),H=o("QkPN"),L=o("vBNu"),w=o("Z7t+"),T=o("II6v"),v=o("MRB6"),P=o("uU7u"),x=o("iInd"),I=o("cUpR"),k=a.vb({encapsulation:0,styles:["[_nghost-%COMP%] { display: block }"],data:{}});function S(t){return a.Tb(0,[(t()(),a.xb(0,0,null,null,1,"app-docs",[],null,null,null,w.b,w.a)),a.wb(1,245760,null,0,T.a,[v.a,P.a,x.n,I.b],{codes:[0,"codes"],item:[1,"item"]},null)],function(t,e){var o=e.component;t(e,1,0,o.codes,o.item)},null)}var z=a.tb("app-acl-control",d,function(t){return a.Tb(0,[(t()(),a.xb(0,0,null,null,1,"app-acl-control",[],null,null,null,S,k)),a.wb(1,49152,null,0,d,[],null,null)],null,null)},{},{},[]),O=a.vb({encapsulation:0,styles:["[_nghost-%COMP%] { display: block }"],data:{}});function M(t){return a.Tb(0,[(t()(),a.xb(0,0,null,null,1,"app-docs",[],null,null,null,w.b,w.a)),a.wb(1,245760,null,0,T.a,[v.a,P.a,x.n,I.b],{codes:[0,"codes"],item:[1,"item"]},null)],function(t,e){var o=e.component;t(e,1,0,o.codes,o.item)},null)}var R=a.tb("app-acl-getting-started",n,function(t){return a.Tb(0,[(t()(),a.xb(0,0,null,null,1,"app-acl-getting-started",[],null,null,null,M,O)),a.wb(1,49152,null,0,n,[],null,null)],null,null)},{},{},[]),D=a.vb({encapsulation:0,styles:["[_nghost-%COMP%] { display: block }"],data:{}});function j(t){return a.Tb(0,[(t()(),a.xb(0,0,null,null,1,"app-docs",[],null,null,null,w.b,w.a)),a.wb(1,245760,null,0,T.a,[v.a,P.a,x.n,I.b],{codes:[0,"codes"],item:[1,"item"]},null)],function(t,e){var o=e.component;t(e,1,0,o.codes,o.item)},null)}var E=a.tb("app-acl-guard",c,function(t){return a.Tb(0,[(t()(),a.xb(0,0,null,null,1,"app-acl-guard",[],null,null,null,j,D)),a.wb(1,49152,null,0,c,[],null,null)],null,null)},{},{},[]),G=o("SVse"),U=o("s7LF"),N=o("5VGP"),F=o("QQfA"),q=o("IP0z"),B=o("POq0"),J=o("sAdM"),Z=o("ekcc"),Q=o("g+Fz"),W=o("Ybye"),Y=o("NFMk"),_=o("10Ig"),V=o("iC8E"),X=o("/HVE"),K=o("v1Dh"),$=o("66zS"),tt=o("5Izy"),et=o("yTpB"),ot=o("zMNK"),at=o("hOhj"),lt=o("r19J"),dt=o("anqq"),nt=o("IYs4"),ct=o("EcpC"),it=o("GaVp"),rt=o("/L1H"),st=o("phDe"),ht=o("rJp6"),gt=o("Rgb0"),pt=o("kS4m"),ut=o("mW00"),bt=o("jTf7"),mt=o("WPSl"),Ct=o("YdS3"),At=o("wQFA"),ft=o("px0D"),yt=o("3ZFI"),Ht=o("CYS+"),Lt=o("oBm0"),wt=o("A7zk"),Tt=o("YRt3"),vt=o("lAiz"),Pt=o("ce6n"),xt=o("SBNi"),It=o("7QIX"),kt=o("tYkK"),St=o("wf2+"),zt=o("eCGT"),Ot=o("nHXS"),Mt=o("fb/r"),Rt=o("zTFG"),Dt=o("JK0T"),jt=o("JXeA"),Et=o("0CZq"),Gt=o("qU0y"),Ut=o("vZsH"),Nt=o("W4B1"),Ft=o("SHEi"),qt=o("FPpa"),Bt=o("RVNi"),Jt=o("NDed"),Zt=o("5A4h"),Qt=o("N2O2"),Wt=o("ozKM"),Yt=o("OvZZ"),_t=o("z+yo"),Vt=o("DQmg"),Xt=o("haRT"),Kt=o("1+nf"),$t=o("XFzh"),te=o("p+Sl"),ee=o("HhpN"),oe=o("SN7N"),ae=o("fwnu"),le=o("VbP7"),de=o("gaRz"),ne=o("e15G"),ce=o("y+Ew"),ie=o("cZe8"),re=o("RU17"),se=o("+YBk"),he=o("9J0+"),ge=o("+Lgp"),pe=o("tFO0"),ue=o("vIiB"),be=o("kB3X"),me=o("CVg0"),Ce=o("oEQ7"),Ae=o("AIZb"),fe=o("XeAm"),ye=o("VE6v"),He=o("RCZh"),Le=o("PGh0"),we=o("rQ3v"),Te=o("0JZw"),ve=o("MR+B"),Pe=o("tZY3"),xe=o("QQcO"),Ie=o("Xoul"),ke=o("HZuH"),Se=o("GgO0"),ze=o("76lH"),Oe=o("TSSN"),Me=o("Fg/6"),Re=o("kzz5"),De=o("SqF5"),je=o("Wl7g"),Ee=o("+TYD"),Ge=o("PCNd");o.d(e,"AclModuleNgFactory",function(){return Ue});var Ue=a.ub(i,[],function(t){return a.Gb([a.Hb(512,a.j,a.eb,[[8,[r.a,s.a,s.b,h.a,g.a,p.a,u.a,b.a,m.a,C.a,A.a,f.a,y.a,H.a,L.a,z,R,E]],[3,a.j],a.x]),a.Hb(4608,G.o,G.n,[a.u,[2,G.J]]),a.Hb(4608,U.t,U.t,[]),a.Hb(4608,U.e,U.e,[]),a.Hb(5120,N.t,N.F,[G.d,[3,N.t]]),a.Hb(4608,F.d,F.d,[F.k,F.f,a.j,F.i,F.g,a.r,a.z,G.d,q.b,[2,G.i]]),a.Hb(5120,F.l,F.m,[F.d]),a.Hb(4608,B.c,B.c,[]),a.Hb(5120,J.b,J.a,[[3,J.b],Z.a]),a.Hb(4608,Q.c,Q.c,[G.d]),a.Hb(4608,W.a,W.a,[Y.h]),a.Hb(4608,_.a,_.a,[V.d]),a.Hb(1073742336,G.b,G.b,[]),a.Hb(1073742336,U.s,U.s,[]),a.Hb(1073742336,U.j,U.j,[]),a.Hb(1073742336,x.r,x.r,[[2,x.w],[2,x.n]]),a.Hb(1073742336,U.q,U.q,[]),a.Hb(1073742336,X.b,X.b,[]),a.Hb(1073742336,K.b,K.b,[]),a.Hb(1073742336,$.b,$.b,[]),a.Hb(1073742336,N.j,N.j,[]),a.Hb(1073742336,tt.b,tt.b,[]),a.Hb(1073742336,et.a,et.a,[]),a.Hb(1073742336,q.a,q.a,[]),a.Hb(1073742336,ot.e,ot.e,[]),a.Hb(1073742336,at.g,at.g,[]),a.Hb(1073742336,F.h,F.h,[]),a.Hb(1073742336,N.r,N.r,[]),a.Hb(1073742336,lt.a,lt.a,[]),a.Hb(1073742336,dt.b,dt.b,[]),a.Hb(1073742336,nt.b,nt.b,[]),a.Hb(1073742336,B.d,B.d,[]),a.Hb(1073742336,ct.b,ct.b,[]),a.Hb(1073742336,N.C,N.C,[]),a.Hb(1073742336,it.c,it.c,[]),a.Hb(1073742336,N.s,N.s,[]),a.Hb(1073742336,rt.e,rt.e,[]),a.Hb(1073742336,st.h,st.h,[]),a.Hb(1073742336,st.a,st.a,[]),a.Hb(1073742336,st.e,st.e,[]),a.Hb(1073742336,ht.c,ht.c,[]),a.Hb(1073742336,gt.b,gt.b,[]),a.Hb(1073742336,pt.d,pt.d,[]),a.Hb(1073742336,ut.c,ut.c,[]),a.Hb(1073742336,bt.h,bt.h,[]),a.Hb(1073742336,mt.f,mt.f,[]),a.Hb(1073742336,Ct.a,Ct.a,[]),a.Hb(1073742336,At.a,At.a,[]),a.Hb(1073742336,ft.d,ft.d,[]),a.Hb(1073742336,yt.a,yt.a,[]),a.Hb(1073742336,Ht.c,Ht.c,[]),a.Hb(1073742336,Lt.a,Lt.a,[]),a.Hb(1073742336,wt.a,wt.a,[]),a.Hb(1073742336,Tt.b,Tt.b,[]),a.Hb(1073742336,vt.g,vt.g,[]),a.Hb(1073742336,vt.b,vt.b,[]),a.Hb(1073742336,Pt.a,Pt.a,[]),a.Hb(1073742336,xt.a,xt.a,[]),a.Hb(1073742336,V.e,V.e,[]),a.Hb(1073742336,V.b,V.b,[]),a.Hb(1073742336,It.b,It.b,[]),a.Hb(1073742336,kt.b,kt.b,[]),a.Hb(1073742336,St.g,St.g,[]),a.Hb(1073742336,zt.a,zt.a,[]),a.Hb(1073742336,Ot.a,Ot.a,[]),a.Hb(1073742336,Mt.b,Mt.b,[]),a.Hb(1073742336,Rt.d,Rt.d,[]),a.Hb(1073742336,Dt.a,Dt.a,[]),a.Hb(1073742336,jt.h,jt.h,[]),a.Hb(1073742336,jt.f,jt.f,[]),a.Hb(1073742336,Y.i,Y.i,[]),a.Hb(1073742336,Y.e,Y.e,[]),a.Hb(1073742336,Y.f,Y.f,[]),a.Hb(1073742336,Et.f,Et.f,[]),a.Hb(1073742336,Et.e,Et.e,[]),a.Hb(1073742336,Gt.a,Gt.a,[]),a.Hb(1073742336,Ut.b,Ut.b,[]),a.Hb(1073742336,Nt.b,Nt.b,[]),a.Hb(1073742336,Ft.b,Ft.b,[]),a.Hb(1073742336,qt.c,qt.c,[]),a.Hb(1073742336,Bt.b,Bt.b,[]),a.Hb(1073742336,Jt.a,Jt.a,[]),a.Hb(1073742336,Zt.a,Zt.a,[]),a.Hb(1073742336,Qt.b,Qt.b,[]),a.Hb(1073742336,Wt.a,Wt.a,[]),a.Hb(1073742336,Yt.a,Yt.a,[]),a.Hb(1073742336,_t.a,_t.a,[]),a.Hb(1073742336,Vt.b,Vt.b,[]),a.Hb(1073742336,Xt.b,Xt.b,[]),a.Hb(1073742336,Kt.f,Kt.f,[]),a.Hb(1073742336,$t.b,$t.b,[]),a.Hb(1073742336,te.a,te.a,[]),a.Hb(1073742336,N.w,N.w,[]),a.Hb(1073742336,ee.a,ee.a,[]),a.Hb(1073742336,oe.b,oe.b,[]),a.Hb(1073742336,ae.b,ae.b,[]),a.Hb(1073742336,N.m,N.m,[]),a.Hb(1073742336,le.a,le.a,[]),a.Hb(1073742336,de.d,de.d,[]),a.Hb(1073742336,ne.a,ne.a,[]),a.Hb(1073742336,ce.b,ce.b,[]),a.Hb(1073742336,ie.b,ie.b,[]),a.Hb(1073742336,re.b,re.b,[]),a.Hb(1073742336,se.a,se.a,[]),a.Hb(1073742336,he.a,he.a,[$.c]),a.Hb(1073742336,ge.a,ge.a,[]),a.Hb(1073742336,pe.a,pe.a,[]),a.Hb(1073742336,ue.a,ue.a,[]),a.Hb(1073742336,be.a,be.a,[]),a.Hb(1073742336,me.a,me.a,[]),a.Hb(1073742336,Ce.a,Ce.a,[]),a.Hb(1073742336,Ae.a,Ae.a,[]),a.Hb(1073742336,fe.a,fe.a,[]),a.Hb(1073742336,ye.a,ye.a,[]),a.Hb(1073742336,He.b,He.b,[]),a.Hb(1073742336,Le.a,Le.a,[]),a.Hb(1073742336,we.a,we.a,[]),a.Hb(1073742336,Te.a,Te.a,[]),a.Hb(1073742336,ve.a,ve.a,[]),a.Hb(1073742336,Pe.a,Pe.a,[]),a.Hb(1073742336,xe.a,xe.a,[]),a.Hb(1073742336,Ie.a,Ie.a,[]),a.Hb(1073742336,ke.a,ke.a,[]),a.Hb(1073742336,Se.a,Se.a,[]),a.Hb(1073742336,ze.a,ze.a,[]),a.Hb(1073742336,Oe.h,Oe.h,[]),a.Hb(1073742336,Me.a,Me.a,[]),a.Hb(1073742336,Re.a,Re.a,[]),a.Hb(1073742336,Q.b,Q.b,[]),a.Hb(1073742336,De.b,De.b,[]),a.Hb(1073742336,je.d,je.d,[]),a.Hb(1073742336,je.h,je.h,[]),a.Hb(1073742336,je.b,je.b,[]),a.Hb(1073742336,je.j,je.j,[]),a.Hb(1073742336,je.l,je.l,[]),a.Hb(1073742336,je.p,je.p,[]),a.Hb(1073742336,je.r,je.r,[]),a.Hb(1073742336,Ee.a,Ee.a,[]),a.Hb(1073742336,Ge.a,Ge.a,[]),a.Hb(1073742336,i,i,[]),a.Hb(256,jt.b,{nzAnimate:!0,nzDuration:3e3,nzMaxStack:7,nzPauseOnHover:!0,nzTop:24},[]),a.Hb(256,Et.b,{nzTop:"24px",nzBottom:"24px",nzPlacement:"topRight",nzDuration:4500,nzMaxStack:7,nzPauseOnHover:!0,nzAnimate:!0},[]),a.Hb(256,Z.a,se.b,[]),a.Hb(1024,x.l,function(){return[[{path:"",component:l.a,children:[{path:"",redirectTo:"getting-started/zh",pathMatch:"full"},{path:"control",redirectTo:"control/zh",pathMatch:"full"},{path:"control/:lang",component:d},{path:"getting-started",redirectTo:"getting-started/zh",pathMatch:"full"},{path:"getting-started/:lang",component:n},{path:"guard",redirectTo:"guard/zh",pathMatch:"full"},{path:"guard/:lang",component:c}]}]]},[])])})}}]);